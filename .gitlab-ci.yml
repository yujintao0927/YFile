# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages: # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job: # This job runs in the build stage, which runs first.
  stage: build
  tags:
    - YFile
  script:
    - echo "Compiling the code..."
    - mvn clean package -Dmaven.test.skip=true
    - echo "Compile complete."
  artifacts:
    paths:
      - target/*.jar

unit-test-job: # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running unit tests... This will take about 60 seconds."
    - sleep 1
    - echo "Code coverage is 90%"

lint-test-job: # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Linting code... This will take about 10 seconds."
    - sleep 1
    - echo "No lint issues found."

deploy-job-gpu: # This job runs in the deploy stage.
  stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
  environment:
    name: staging
  rules:
    - if: $CI_COMMIT_REF_NAME == "master" && $CI_COMMIT_TAG !~ /^v\d+\.\d+\.\d+/
      when: always
  script:
    - echo "Deploying application..."
    - ssh gitlab@172.29.4.224 "mkdir -p /opt/YFile/logs"
    - ssh gitlab@172.29.4.224 "mkdir -p /opt/YFile/upload"
    - ssh gitlab@172.29.4.224 "mkdir -p /opt/YFile/unzip"
    - ssh gitlab@172.29.4.224 "mkdir -p /opt/YFile/archive-unzip"

    - scp -r src/main/resources/application.properties gitlab@172.29.4.224:/opt/YFile
    - scp -r src/main/resources/application-default.properties gitlab@172.29.4.224:/opt/YFile
    - scp -r src/main/resources/application-default.properties gitlab@172.29.4.224:/opt/YFile
    - scp -r src/main/resources/application-prod.properties gitlab@172.29.4.224:/opt/YFile

    - scp -r src/main/resources/db/ gitlab@172.29.4.224:/opt/YFile/db/
    - scp -r src/main/resources/templates/ gitlab@172.29.4.224:/opt/YFile/templates/
    - scp -r src/main/resources/logback-spring.xml gitlab@172.29.4.224:/opt/YFile

    - ssh gitlab@172.29.4.224 "sudo systemctl stop YFile"
    - scp -r target/*.jar gitlab@172.29.4.224:/opt/YFile
    - ssh gitlab@172.29.4.224 "cd /opt/YFile && chmod 755 YFile-0.0.1-SNAPSHOT.jar && ln -sf YFile-0.0.1-SNAPSHOT.jar YFile-latest.jar"
    - ssh gitlab@172.29.4.224 "sudo systemctl start YFile"
    - echo "Application successfully deployed."
  retry: 2

